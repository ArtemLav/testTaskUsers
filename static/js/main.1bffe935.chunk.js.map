{"version":3,"sources":["store/store.js","api/api.js","shapes/UserShape.js","components/WelcomeButton/WelcomeButton.jsx","components/Pagination/Pagination.jsx","components/UserCard/UserCard.jsx","components/UsersList/UsersList.jsx","components/RandomUser/RandomUser.jsx","components/UsersPage/UsersPage.jsx","components/UsersPage/index.js","App.jsx","index.js"],"names":["SET_USERS","getUsers","state","users","usersStore","createStore","action","type","getUsersFromApi","PropTypes","shape","id","string","isRequired","name","surname","desc","a","fetch","response","ok","Error","status","statusText","json","WelcomeButton","handleClick","onClick","className","Pagination","total","currentPage","setCurrentPage","perPage","pagesCount","Math","ceil","pagesNumbers","Array","from","length","_","i","classNames","disabled","map","number","active","UserCard","user","UsersList","start","end","currentUsers","slice","RandomUser","useState","randomUser","setRandomUser","useEffect","interval","setInterval","floor","random","clearInterval","UsersPage","setUsers","defaultProps","connect","App","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.1bffe935.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst SET_USERS = 'SET_USERS';\n\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users,\n});\n\nexport const getUsers = state => state.users;\n\nconst initialState = {\n  users: [],\n};\n\nconst usersReducer = (state, action) => {\n  switch (action.type) {\n    case SET_USERS:\n      return {\n        ...state,\n        users: action.users,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst usersStore = createStore(usersReducer, initialState);\n\nexport default usersStore;\n","const USERS_URL = 'https://api.jsonbin.io/b/5fb62b0d4144f562a5f02c2c';\n\nexport const getUsersFromApi = async() => {\n  const response = await fetch(USERS_URL);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const { users } = await response.json();\n\n  return users;\n};\n","import PropTypes from 'prop-types';\n\nexport const UserShape = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  surname: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const WelcomeButton = ({ handleClick }) => (\n  <button\n    type=\"button\"\n    onClick={handleClick}\n    className=\"btn btn-primary d-block mx-auto\"\n  >\n    Get Started\n  </button>\n);\n\nWelcomeButton.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const Pagination = ({\n  total,\n  currentPage,\n  setCurrentPage,\n  perPage,\n}) => {\n  const pagesCount = Math.ceil(total / perPage);\n  const pagesNumbers = Array.from({ length: pagesCount }, (_, i) => i + 1);\n\n  return (\n    <ul className=\"pagination justify-content-center mt-5\">\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <button\n          onClick={() => setCurrentPage(currentPage - 1)}\n          type=\"button\"\n          className=\"page-link\"\n        >\n          Previous\n        </button>\n      </li>\n\n      {pagesNumbers.map(number => (\n        <li\n          key={number}\n          className={classNames('page-item', {\n            active: currentPage === number,\n          })}\n        >\n          <button\n            onClick={() => setCurrentPage(number)}\n            type=\"button\"\n            className=\"page-link\"\n          >\n            {number}\n          </button>\n        </li>\n      ))}\n\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === pagesCount,\n        })}\n      >\n        <button\n          onClick={() => setCurrentPage(currentPage + 1)}\n          type=\"button\"\n          className=\"page-link\"\n        >\n          Next\n        </button>\n      </li>\n    </ul>\n  );\n};\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  setCurrentPage: PropTypes.func.isRequired,\n  perPage: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { UserShape } from '../../shapes/UserShape';\n\nexport const UserCard = ({ user }) => (\n  <section className=\"card m-3\">\n    <div className=\"card-header text-center\">\n      <h2 className=\"card-title\">{`${user.name} ${user.surname}`}</h2>\n    </div>\n    <div className=\"card-body\">\n      <p className=\"card-text text-center\">{user.desc}</p>\n    </div>\n  </section>\n);\n\nUserCard.propTypes = {\n  user: UserShape.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { UserShape } from '../../shapes/UserShape';\nimport { UserCard } from '../UserCard/UserCard';\n\nexport const UsersList = ({ users, currentPage, perPage }) => {\n  const start = perPage * currentPage - perPage;\n  const end = perPage * currentPage;\n\n  const currentUsers = users.slice(start, end);\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      {currentUsers.map(user => (\n        <UserCard user={user} key={user.id} />\n      ))}\n    </div>\n  );\n};\n\nUsersList.propTypes = {\n  users: PropTypes.arrayOf(UserShape).isRequired,\n  currentPage: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { UserShape } from '../../shapes/UserShape';\n\nexport const RandomUser = ({ users }) => {\n  const [randomUser, setRandomUser] = useState(users[0]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setRandomUser(users[Math.floor(Math.random() * users.length)]);\n    }, 8000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <>\n      <h4 className=\"text-center text-secondary\">Random User:</h4>\n      <h2 className=\"text-center text-primary\">\n        {`${randomUser.name} ${randomUser.surname}`}\n      </h2>\n    </>\n  );\n};\n\nRandomUser.propTypes = {\n  users: PropTypes.arrayOf(UserShape).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { UserShape } from '../../shapes/UserShape';\n\nimport { getUsersFromApi } from '../../api/api';\n\nimport { WelcomeButton } from '../WelcomeButton/WelcomeButton';\nimport { Pagination } from '../Pagination/Pagination';\nimport { UsersList } from '../UsersList/UsersList';\nimport { RandomUser } from '../RandomUser/RandomUser';\n\nexport const UsersPage = ({ users, setUsers }) => {\n  const getUsers = async() => {\n    setUsers(await getUsersFromApi());\n  };\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  return (\n    <div>\n      {users.length === 0 ? (\n        <WelcomeButton handleClick={getUsers} />\n      ) : (\n        <>\n          <h1 className=\"text-center\">Test Task Users</h1>\n\n          <RandomUser users={users} />\n\n          <UsersList\n            users={users}\n            currentPage={currentPage}\n            perPage={5}\n          />\n\n          <Pagination\n            total={users.length}\n            currentPage={currentPage}\n            setCurrentPage={setCurrentPage}\n            perPage={5}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nUsersPage.propTypes = {\n  users: PropTypes.arrayOf(UserShape),\n  setUsers: PropTypes.func.isRequired,\n};\n\nUsersPage.defaultProps = {\n  users: [],\n};\n","import { connect } from 'react-redux';\nimport { getUsers, setUsers } from '../../store/store';\n\nimport { UsersPage } from './UsersPage';\n\nconst mapStateToProps = state => ({\n  users: getUsers(state),\n});\n\nexport default connect(mapStateToProps, { setUsers })(UsersPage);\n","import React from 'react';\nimport UsersPage from './components/UsersPage/index';\n\nexport const App = () => (\n  <div className=\"App pt-3 px-3\">\n    <UsersPage />\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport usersStore from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={usersStore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}